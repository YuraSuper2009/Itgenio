{"version":3,"sources":["components/header/header.component.jsx","components/form-input/form-input.component.jsx","components/name-surname/name.component.jsx","components/enter-flag/inpt.component.jsx","components/task-list/list/item/task-item.component.jsx","components/task-list/list/task-list.component.jsx","pages/home/home.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","id","src","alt","FormInput","handleChange","label","otherProps","onChange","value","length","SignIn","props","handleSubmit","event","preventDefault","setState","email","target","name","state","onSubmit","this","required","React","Component","Form_Flag","type","class","placeholder","data-toggle","data-placement","title","data-original-title","MenuItem","points","date","url","TaskList","tasks","map","otherSectionProps","href","key","Home_Page","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yZAiBeA,EATA,kBACX,kBAAC,IAAD,KACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKC,GAAG,OAAMC,IAAI,YAAYC,IAAI,a,mDCQ5CC,G,MAfG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAUC,EAA3B,+CAChB,yBAAKR,UAAU,SACb,yCAAOA,UAAU,aAAaS,SAAUH,GAAkBE,IACzDD,EACC,2BACEP,UAAS,UACPQ,EAAWE,MAAMC,OAAS,SAAW,GAD9B,sBAIRJ,GAED,QCqBOK,G,wDAhCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKVC,aAAe,SAAAC,GACXA,EAAMC,iBACN,EAAKC,SAAS,CAACC,MAAM,MARP,EAUlBZ,aAAe,SAAAS,GAAU,IAAD,EACEA,EAAMI,OAArBT,EADa,EACbA,MAAOU,EADM,EACNA,KACd,EAAKH,SAAL,eAAgBG,EAAMV,KAVtB,EAAKW,MAAQ,CACTH,MAAO,IAHG,E,qDAed,OACI,yBAAKlB,UAAU,WACX,oNACA,0BAAMsB,SAAUC,KAAKT,cACjB,kBAAC,EAAD,CACAM,KAAK,QACLV,MAAOa,KAAKF,MAAMH,MAClBZ,aAAciB,KAAKjB,aACnBC,MAAM,QACNiB,UAAQ,U,GAzBPC,IAAMC,YCgBZC,G,MAjBG,kBACd,yBAAK3B,UAAU,SACf,yBAAKA,UAAU,aACX,2BAAO4B,KAAK,OACZ1B,GAAG,YACH2B,MAAM,eACNC,YAAY,mFACZC,cAAY,UACZC,iBAAe,SACfC,MAAM,GACNC,sBAAoB,oBAExB,4BAAQhC,GAAG,MAAMkB,KAAK,QAAtB,YCGae,EAfA,SAAC,GAAD,IAAEf,EAAF,EAAEA,KAAMQ,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,KAAtB,EAA4BC,IAA5B,OACf,yBAAKtC,UAAU,QACb,yBACEA,UAAS,UAAKoB,EAAL,eAET,yBAAKpB,UAAU,WACb,0BAAMA,UAAU,SAASoB,GACzB,8BAAOQ,EAAO,KACd,8BAAOQ,EAAS,KAChB,8BAAOC,EAAO,SCqBPE,G,8DAzBb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXmB,MAAO,CACL,CACEpB,KAAM,OACNQ,KAAM,OACNQ,OAAQ,SACRC,KAAM,mBACNC,IAAK,WATM,E,qDAejB,OACE,yBAAKtC,UAAU,kBACZuB,KAAKF,MAAMmB,MAAMC,KAAI,gBAAGrB,EAAH,EAAGA,KAASsB,EAAZ,+BAClB,uBAAGvB,OAAO,SAASwB,KAAK,0BAAyB,kBAAC,EAAD,eAAUC,IAAKxB,GAAUsB,a,GAnB/DjB,IAAMC,YCadmB,EAdG,kBACd,yBAAK7C,UAAU,QACX,uBAAGE,GAAG,SAAN,kmDAOA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAO4C,MAXf,WACE,OACE,yBAAK9C,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCEY+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d55f0467.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.styles.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";  \r\nconst Header = () => (\r\n    <Router>\r\n        <div className=\"Header\">\r\n            <Link to=\"/\"><img id=\"logo\"src=\"logo2.png\" alt=\"Logo\"></img></Link>\r\n        </div>\r\n    </Router>\r\n    \r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? 'shrink' : ''\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport './name.style.css' \r\nclass SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n        }\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.setState({email:''})\r\n    }\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]:value})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>Для отправки флагов, ввведите Ваш e-mail</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    handleChange={this.handleChange}\r\n                    label=\"Email\"\r\n                    required>\r\n                    </FormInput>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './inpt.style.css'\r\nconst Form_Flag = () => (\r\n    <div className=\"flags\">\r\n    <div className=\"flagEntry\">\r\n        <input type=\"text\"\r\n        id=\"auth-flag\"\r\n        class=\"form-control\"\r\n        placeholder=\"Сюда введи флаг\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"\"   \r\n        data-original-title=\"Enter the flag.\">\r\n    </input>\r\n    <button id=\"btn\" name=\"Send\">Send</button>\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default Form_Flag;","import React from 'react';\n\nconst MenuItem = ({name, type, points, date, url}) => (\n  <div className=\"task\">\n    <div\n      className={`${name} menu-item`}\n    >\n      <div className='content'>\n        <span className='title'>{name}</span>\n        <span>{type + \" \"}</span>\n        <span>{points + \" \"}</span>\n        <span>{date + \" \"}</span>\n      </div>\n    </div>\n  </div>\n  );\n  \n  export default MenuItem;","import React from \"react\";\nimport MenuItem from \"./item/task-item.component\";\nimport \"./task-list.style.css\";\nimport TaskPage from \"../../task-page/task-page.react.component\";\nimport { Link } from \"react-router-dom\";\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [\n        {\n          name: \"Name\",\n          type: \"Type\",\n          points: \"Points\",\n          date: \"00/00/2020 22:00\",\n          url: \"/task\",\n        },\n      ],\n    };\n  }\n  render() {\n    return (\n      <div className=\"directory-menu\">\n        {this.state.tasks.map(({ name, ...otherSectionProps }) => (\n            <a target=\"_blank\" href=\"https://www.google.com\"><MenuItem key={name} {...otherSectionProps}></MenuItem></a>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default TaskList;\n","import React from 'react';\nimport './home.style.css';\nimport Name_comp from '../../components/name-surname/name.component';\nimport Form_Flag from '../../components/enter-flag/inpt.component';\nimport TaskList from '../../components/task-list/list/task-list.component';\nconst Home_Page = () => (\n    <div className=\"Home\">\n        <a id=\"about\">Наш проект называется Itgen.io CTF,\n        на нашем сайте вы можете найти\n        самые трудные и интересные задачки на любые темы.\n        Как проходить задачи: Вам следует находить флаги и отправлять их,\n        этим Вы будете получать очки за правильные флаги,\n        5 участников набравшие наибольшее количество очков\n        получат бонусы и маленькие призы от Itgen.io Удачи!</a>\n        <Name_comp></Name_comp>\n        <Form_Flag></Form_Flag>\n        <TaskList></TaskList>\n    </div>    \n)\nexport default Home_Page;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header.component\";\nimport Home_Page from \"./pages/home/home.component\";\nimport { BrowserRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header></Header>\n        <Home_Page></Home_Page>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}